// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/genproto/src/other/other.proto

package other

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OtherMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OtherMessage) Reset()         { *m = OtherMessage{} }
func (m *OtherMessage) String() string { return proto.CompactTextString(m) }
func (*OtherMessage) ProtoMessage()    {}
func (*OtherMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a491e857b6742174, []int{0}
}

func (m *OtherMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OtherMessage.Unmarshal(m, b)
}
func (m *OtherMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OtherMessage.Marshal(b, m, deterministic)
}
func (m *OtherMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OtherMessage.Merge(m, src)
}
func (m *OtherMessage) XXX_Size() int {
	return xxx_messageInfo_OtherMessage.Size(m)
}
func (m *OtherMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OtherMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OtherMessage proto.InternalMessageInfo

func init() {
	proto.RegisterType((*OtherMessage)(nil), "other.OtherMessage")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/genproto/src/other/other.proto", fileDescriptor_a491e857b6742174)
}

var fileDescriptor_a491e857b6742174 = []byte{
	// 99 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4a, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0x2c, 0x48, 0x2d, 0x2a, 0x29, 0x2d, 0x4a, 0x2d,
	0xca, 0x4f, 0xca, 0x2f, 0xc9, 0x4c, 0x2e, 0xd6, 0x4f, 0x4f, 0xcd, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0xd7, 0x2f, 0x2e, 0x4a, 0xd6, 0xcf, 0x2f, 0xc9, 0x48, 0x2d, 0x82, 0x90, 0x7a, 0x60, 0x51, 0x21,
	0x56, 0x30, 0x47, 0x89, 0x8f, 0x8b, 0xc7, 0x1f, 0xc4, 0xf0, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f,
	0x4d, 0x62, 0x03, 0xcb, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x86, 0xe4, 0xc5, 0x94, 0x5b,
	0x00, 0x00, 0x00,
}
